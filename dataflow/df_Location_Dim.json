{
	"name": "df_Location_Dim",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Geo_csv",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "import data from ds_GeoDataFile"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_Edw_Location_Dim",
						"type": "DatasetReference"
					},
					"name": "LoadLocationDim",
					"description": "Export data to ds_EDW_Location_Dim"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1",
					"description": "Adding new key SK_ID starting from 1 with step 1"
				},
				{
					"name": "derivedColumn1",
					"description": "Creating/updating the columns 'state_fips, state, state_abbr, zipcode, county, city, SK_ID, DI_CREATED_DT, DI_JOB_ID"
				}
			],
			"scriptLines": [
				"source(output(",
				"          state_fips as short,",
				"          state as string,",
				"          state_abbr as string,",
				"          zipcode as string,",
				"          county as string,",
				"          city as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 keyGenerate(output(SK_ID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(DI_CREATED_DT = currentDate(),",
				"          DI_JOB_ID = 'DI_' + upper(right(uuid(),7))) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LOCATION_SK as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          STATE_ABBR as string,",
				"          ZIP_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          LOCATION_SK = SK_ID,",
				"          CITY = city,",
				"          STATE = state,",
				"          STATE_ABBR = state_abbr,",
				"          ZIP_CODE = zipcode,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DT = DI_CREATED_DT",
				"     )) ~> LoadLocationDim"
			]
		}
	}
}